# Customize this file, documentation can be found here:
# https://docs.fastlane.tools/actions/
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.63.0"

default_platform :ios

platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
    cocoapods
    # carthage
  end

  desc "Runs all the tests"
  lane :test do
    scan
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    # match(type: "appstore") # more information: https://codesigning.guide
    ENV["APP_IDENTIFIER"] = "services.provide"
    ENV["FASTLANE_ITC_TEAM_ID"] = "117789692"
    team_id "4A8DZ57H2Y" # Provide Technologies Inc. Developer Portal Team ID
    get_certificates
    get_provisioning_profile(app_identifier: ENV['APP_IDENTIFIER'])
    gym(scheme: "provide") # Build your app - more options available
    pilot

    # sh "your_script.sh"
    # You can also use other beta testing services here (run `fastlane actions`)
  end

  desc "Deploy a new version to the App Store"
  lane :release do
    # match(type: "appstore")
    # snapshot
    ENV["APP_IDENTIFIER"] = "services.provide"
    ENV["FASTLANE_ITC_TEAM_ID"] = "117789692"
    team_id "4A8DZ57H2Y" # Provide Technologies Inc. Developer Portal Team ID
    get_certificates
    get_provisioning_profile(app_identifier: ENV['APP_IDENTIFIER'])
    gym(scheme: "provide") # Build your app - more options available
    deliver(force: true)
    # frameit
  end

  desc "Submit unicorn beta to TestFlight"
  lane :unicorn_beta do
    ENV["APP_IDENTIFIER"] = "services.provide.unicorn"
    ENV["FASTLANE_ITC_TEAM_ID"] = "117789692"
    team_id "4A8DZ57H2Y" # Provide Technologies Inc. Developer Portal Team ID
    get_certificates
    get_provisioning_profile(app_identifier: ENV['APP_IDENTIFIER'])
    gym(scheme: "unicorn")
    pilot
  end

  desc "Submit unicorn driver beta to TestFlight"
  lane :unicorn_driver_beta do
    ENV["APP_IDENTIFIER"] = "services.provide.unicorn.driver"
    ENV["FASTLANE_ITC_TEAM_ID"] = "117789692"
    team_id "4A8DZ57H2Y" # Provide Technologies Inc. Developer Portal Team ID
    get_provisioning_profile(app_identifier: ENV['APP_IDENTIFIER'])
    gym(scheme: "unicorn driver")
    pilot
  end

  desc "Submit arcade city beta to TestFlight"
  lane :arcade_city_rider_beta do
    ENV["APP_IDENTIFIER"] = "arcade.city.rider"
    ENV["FASTLANE_ITC_TEAM_ID"] = "1474288693"
    team_id "AY3DU4DJUH" # Arcade City Inc. Developer Portal Team ID
    get_certificates
    get_provisioning_profile(app_identifier: ENV['APP_IDENTIFIER'])
    gym(scheme: "arcade city")
    pilot
  end

  desc "Submit arcade city driver beta to TestFlight"
  lane :arcade_city_driver_beta do
    ENV["APP_IDENTIFIER"] = "arcade.city.driver"
    ENV["FASTLANE_ITC_TEAM_ID"] = "1465436427"
    team_id "AY3DU4DJUH" # Arcade City Inc. Developer Portal Team ID
    get_certificates
    get_provisioning_profile(app_identifier: ENV['APP_IDENTIFIER'])
    gym(scheme: "arcade city driver")
    pilot
  end

  desc "Submit arcade city beta to TestFlight"
  lane :arcade_city_beta do
    ENV["APP_IDENTIFIER"] = "arcade.city.rides"
    ENV["FASTLANE_ITC_TEAM_ID"] = "1474871378"
    team_id "AY3DU4DJUH" # Arcade City Inc. Developer Portal Team ID
    get_certificates
    get_provisioning_profile(app_identifier: ENV['APP_IDENTIFIER'])
    gym(scheme: "arcade city")
    pilot
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used. No personal data is recorded.
# Learn more at https://docs.fastlane.tools/#metrics
